import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar

plugins {
  id 'java-library'
  alias(libs.plugins.vanniktech.maven.publish)
}

apply from: rootProject.file('scripts/java-library.gradle')
apply from: rootProject.file('scripts/build-toolchain-dependencies.gradle')

description = "The RPC client component provides the ability to quickly and easily implement RPC client functions. Importing and using RPC interfaces is as easy as injecting `@Autowired`!"

dependencies {
  implementation project(":springboot3-components-rpc:springboot3-components-rpc-core")
  implementation project(":springboot3-components-boot")
  implementation project(":springboot3-components-context")
  implementation project(":springboot3-components-env")
  implementation project(":springboot3-components-errors")
  implementation project(":springboot3-components-stats")
  implementation project(":springboot3-components-trace")

  implementation platform(libs.netty.bom)
  implementation(libs.grpc.api)
  implementation(libs.grpc.netty)
  implementation(libs.grpc.protobuf)
  implementation(libs.grpc.services)
  implementation(libs.opentelemetry.api)
  implementation(libs.opentelemetry.context)
}

configureMavenPublishingCommonFields(project)
mavenPublishing.configure(new JavaLibrary(new JavadocJar.None(), true))
